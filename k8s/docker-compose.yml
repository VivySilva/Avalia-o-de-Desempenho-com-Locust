services:
  config-server:
    image: astoklas177/spring-petclinic-config-server:2025.4.9
    container_name: config-server
    deploy:
      resources:
        limits:
          memory: 512M
    healthcheck:
      test: ["CMD", "curl", "-I", "http://config-server:8888"]
      interval: 5s
      timeout: 5s
      retries: 10
    ports:
     - 8888:8888
    environment:   
      - JAVA_OPTIONS="-Dspring.profiles.active=native -DGIT_REPO=/projects/spring-petclinic-microservices-config"
    volumes:
      - type: bind
        source: ./spring-petclinic-microservices-config
        target: /projects/spring-petclinic-microservices-config

  discovery-server:
    image: astoklas177/spring-petclinic-discovery-server:2025.4.9
    container_name: discovery-server
    deploy:
      resources:
        limits:
          memory: 512M
    healthcheck:
      test: ["CMD", "curl", "-f", "http://discovery-server:8761"]
      interval: 5s
      timeout: 3s
      retries: 10
    depends_on:
      config-server:
        condition: service_healthy
    ports:
     - 8761:8761
    environment:
      - SPRING_PROFILES_ACTIVE=default

  customers-service:
    image: astoklas177/spring-petclinic-customers-service:2025.4.9
    container_name: customers-service
    deploy:
      resources:
        limits:
          memory: 512M
    depends_on:
      config-server:
        condition: service_healthy
      discovery-server:
        condition: service_healthy
    ports:
    - 8081:8081
    environment:
      - SPRING_PROFILES_ACTIVE=docker

  visits-service:
    image: astoklas177/spring-petclinic-visits-service:2025.4.9
    container_name: visits-service
    deploy:
      resources:
        limits:
          memory: 512M
    depends_on:
      config-server:
        condition: service_healthy
      discovery-server:
        condition: service_healthy
    ports:
     - 8082:8082
    environment:
      - SPRING_PROFILES_ACTIVE=docker

  vets-service:
    image: astoklas177/spring-petclinic-vets-service:2025.4.9
    container_name: vets-service
    deploy:
      resources:
        limits:
          memory: 512M
    depends_on:
      config-server:
        condition: service_healthy
      discovery-server:
        condition: service_healthy
    ports:
     - 8083:8083
    environment:
      - SPRING_PROFILES_ACTIVE=docker,mysql


  genai-service:
    image: astoklas177/spring-petclinic-genai-service:2025.4.9
    container_name: genai-service
    environment:
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - AZURE_OPENAI_KEY=${AZURE_OPENAI_KEY}
      - AZURE_OPENAI_ENDPOINT=${AZURE_OPENAI_ENDPOINT}
      - SPRING_PROFILES_ACTIVE="docker" 
    deploy:
      resources:
        limits:
          memory: 512M
    depends_on:
      config-server:
        condition: service_healthy
      discovery-server:
        condition: service_healthy
    ports:
     - 8084:8084

 


  api-gateway:
    image: astoklas177/spring-petclinic-api-gateway:2025.4.9
    container_name: api-gateway
    deploy:
      resources:
        limits:
          memory: 512M
    depends_on:
      config-server:
        condition: service_healthy
      discovery-server:
        condition: service_healthy
    ports:
     - 8080:8080
    environment:
      - SPRING_PROFILES_ACTIVE=docker 

  petclinic-db:
    image: biarms/mysql:5.7
    container_name: petclinic-db
    environment:
      - MYSQL_ROOT_PASSWORD=petclinic
      - MYSQL_DATABASE=petclinic
    deploy:
      resources:
        limits:
          memory: 256M
    ports:
     - 3306:3306
    volumes:
      - type: bind
        source: ./db/
        target: /docker-entrypoint-initdb.d/




